---
title: "第6&7章"
format: 
  html:
    theme: journal
    highlight-style: pygments
    page-layout: article
number-sections: true
toc: true
toc-depth: 3
toc-location: left
code-fold: show
editor: source
date: "最終更新 `r Sys.Date()`"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(cache = FALSE, echo = TRUE, fig.align = "center", warning = FALSE)
library(ggplot2)
library(magrittr)
library(modelsummary)
library(kableExtra)
library(CausalInferenceTextbook)
color_main <- scales::viridis_pal(option = "C")(1)
```

# [6-1]シャープRD推定

```{r}
set.seed(1)
N <- 500
```

```{r}
plot <- 
  data.frame(
    x = c(
      -1,
      1
    )
  ) %>% 
  ggplot(
    aes(
      x = x
    )
  ) +
  stat_function(
    fun = 
      function(x) {
        dbeta(
          x = (x + 1) / 2,
          shape1 = 2,
          shape2 = 4
        )
      }
  ) +
  labs(
    y = "Density"
  ) +
  theme_classic()

plot
```

```{r}
plot <- 
  data.frame(
    x =
      c(
        1,
        -1
      )
  ) %>% 
  ggplot(
    aes(
      x = x
    )
  ) +
  stat_function(
    fun = specify_mu_lee,
    geom = "point"
  ) +
  labs(
    y = "Regression function",
    x = "Score"
  ) +
  theme_classic()

plot
```

```{r}
dgp_lee <- 
  generate_dgp_lee(
    N = N
  )
```

```{r}
mean_y <- 
  dgp_lee %>% 
  dplyr::group_by(d) %>% 
  dplyr::summarise(
    y = mean(y)
  ) %>% 
  dplyr::pull(y)

mean_y %>% 
  kbl %>% 
  kable_styling()
```

```{r}
lim_mena_y <- 
  data.frame(
    d = c(
      FALSE,
      TRUE
    ),
    mean_y = c(
      specify_mu_lee(
        s = -1.e-30
      ),
      specify_mu_lee(
        s = 0
      )
    )
  )

lim_mena_y %>% 
  kbl() %>% 
  kable_styling()
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s
  )

summary(result)
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    all = TRUE
  )

summary(result)
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    all = TRUE,
    rho = 1
  )

summary(result)
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    all = TRUE,
    p = 2,
    h = result$bws[1, 1],
    b = result$bws[1, 1]
  )

summary(result)
```

```{r}
rdrobust::rdplot(
  y = dgp_lee$y,
  x = dgp_lee$s
)
```

```{r}
rdrobust::rdplot(
  y = dgp_lee$y,
  x = dgp_lee$s,
  binselect = "es"
)
```

```{r}
rdrobust::rdplot(
  y = dgp_lee$y,
  x = dgp_lee$s,
  binselect = "qs"
)
```

# [6-2]シャープRD推定の妥当性チェック手順
```{r}
set.seed(1)
N <- 500
```

```{r}
plot <- 
  data.frame(
    x =
      c(
        -1, 
        1
      )
  ) %>% 
  ggplot(
    aes(
      x = x
    )
  ) +
  stat_function(
    fun = 
      function(x) {
        dbeta(
          x = (x + 1) / 2,
          shape1 = 2,
          shape2 = 4
        )
      }
  ) +
  labs(
     y = "Density"
  ) +
  theme_classic()

plot
```

```{r}
plot <- 
  data.frame(
    x = 
      c(
        -1,
        1
      )
  ) %>% 
  ggplot(
    aes(
      x = x
    )
  ) +
  stat_function(
    fun = specify_mu_lee,
    geom = "point"
  ) +
  labs(
    y = "Regression function",
    x = "Score"
  ) +
  theme_classic()

plot
```

```{r}
dgp_lee <- 
  generate_dgp_lee(
    N = N
  )
```

```{r}
mean_y <- 
  dgp_lee %>% 
    dplyr::group_by(d) %>% 
    dplyr::summarise(
      y = mean(y)
    ) %>% 
    dplyr::pull(y)

mean_y %>% 
  kbl() %>% 
  kable_styling()
```

```{r}
lim_mean_y <- 
  data.frame(
    d = c(
      FALSE,
      TRUE
    ),
    mean_y = c(
      specify_mu_lee(
        s = -1.e-30
      ),
      specify_mu_lee(
        s = 0
      )
    )
  )

lim_mena_y %>% 
  kbl() %>% 
  kable_styling()
```

```{r}
result_density <- 
  rddensity::rddensity(
    X = dgp_lee$s
  )

summary(result_density)
```

```{r}
rddensity::rdplotdensity(
  rdd = result_density,
  X = dgp_lee$s
)
```

```{r}
result_opt <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s
  )
table <- 
  data.frame(
    case = "optimal",
    absolute_bias = sum(abs(result_opt$bias)),
    se_raw = result_opt$se[1],
    bandwidth_h = result_opt$bws[1, 1],
    bandwidth_b = result_opt$bws[2, 1]
  )

result_small <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    h = result_opt$bws[1, 1] / 10,
    b = result_opt$bws[2, 1]
  )
table <- 
  rbind(
    table,
    data.frame(
      case = "small",
      absolute_bias = sum(abs(result_small$bias)),
      se_raw = result_small$se[1],
      bandwidth_h = result_small$bws[1, 1],
      bandwidth_b = result_small$bws[2, 1]
    )
  )

result_large <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    h = result_opt$bws[1, 1] * 4,
    b = result_opt$bws[2, 1]
  )
table <- 
  rbind(
    table,
    data.frame(
      case = "large",
      absolute_bias = sum(abs(result_large$bias)),
      se_raw = result_large$se[1],
      bandwidth_h = result_large$bws[1, 1],
      bandwidth_b = result_large$bws[2, 1]
    )
  )

table %>% 
  kbl() %>% 
  kable_styling()
```

#　ファジーRD推定
```{r}
set.seed(1)
N <- 1000
```

```{=latex}
\begin{align*}
 d =& 1\{\Psi^{-1}(0.3(1 + 0.5s) + 0.4z) \leq \epsilon_i\},\epsilon_i \sim N(0,1)\\
 z =& 1\{s \geq 0\},\Psi(x) = P(\epsilon_i \leq x)\\
 y =& y^*(1)d + y^*(0)(1 - d)
\end{align*}
```

```{r}
dgp_lee <- 
  generate_dgp_lee_fuzzy(
    N = N
  )
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    all = TRUE
  )

summary(result)
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$d,
    x = dgp_lee$s,
    all = TRUE
  )

summary(result)
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$s,
    fuzzy = dgp_lee$d,
    all = TRUE
  )

summary(result)
```

```{r}
result <- 
  rdrobust::rdrobust(
    y = dgp_lee$y,
    x = dgp_lee$d,
    all = TRUE
  )

summary(result)
```
























































































